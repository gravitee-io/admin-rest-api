############################################################################################################
################################ Gravitee.IO Management API - Configuration ################################
############################################################################################################

############################################################################################################
# This file is the general configuration of Gravitee.IO Management API:
# - Properties (and respective default values) in comment are provided for information.
# - You can reference other property by using ${property.name} syntax
# - gravitee.home property is automatically set-up by launcher and refers to the installation path. Do not override it !
#
# Please have a look to http://docs.gravitee.io/ for more options and fine-grained granularity
############################################################################################################

# HTTP Server
#jetty:
#  port: 8083
#  idleTimeout: 30000
#  acceptors: -1
#  selectors: -1
#  pool:
#    minThreads: 10
#    maxThreads: 200
#    idleTimeout: 60000
#    queueSize: 6000
#  jmx: false
#  statistics: false
#  accesslog:
#    enabled: true
#    path: ${gravitee.home}/logs/gravitee_accesslog_yyyy_mm_dd.log

# Path to plugins repository
#plugins:
#  path: ${gravitee.home}/plugins

# Management repository is used to store global configuration such as APIs, applications, apikeys, ...
# This is the default configuration using MongoDB (single server)
# For more information about MongoDB configuration, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientOptions.html
management:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}
#    username:
#    password:
#    connectionsPerHost: 0
#    connectTimeout: 500
#    maxWaitTime: 120000
#    socketTimeout: 500
#    socketKeepAlive: false
#    maxConnectionLifeTime: 0
#    maxConnectionIdleTime: 0
#    serverSelectionTimeout: 0
#    description: gravitee.io
#    heartbeatFrequency: 10000
#    minHeartbeatFrequency: 500
#    heartbeatConnectTimeout: 1000
#    heartbeatSocketTimeout: 20000
#    localThreshold: 15
#    minConnectionsPerHost: 0
#    sslEnabled: false
#    threadsAllowedToBlockForConnectionMultiplier: 5
#    cursorFinalizerEnabled: true

# Management repository: single MongoDB using URI
# For more information about MongoDB configuration using URI, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientURI.html
#management:
#  type: mongodb
#  mongodb:
#    uri: mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]

# Management repository: clustered MongoDB
#management:
#  type: mongodb
#  mongodb:
#    servers:
#      - host: mongo1
#        port: 27017
#      - host: mongo2
#        port: 27017
#    dbname: ${ds.mongodb.dbname}
#    connectTimeout: 500
#    socketTimeout: 250

# Analytics repository is used to store all reporting, metrics, healthchecks stored by gateway instances
# This is the default configuration using Elasticearch
analytics:
  type: elasticsearch
  elasticsearch:
    host: ${ds.elastic.host}
    port: ${ds.elastic.port}

security:
  type: basic # authentication type (default to 'basic', possible values : 'basic', 'oauth2')
  providers:  # authentication providers
    - type: memory
      users:
        - user:
          username: user
          password: $2a$10$9kjw/SH9gucCId3Lnt6EmuFreUAcXSZgpvAYuW2ISv7hSOhHRH1AO
          roles: USER # you can declare multiple roles with comma separator (USER, ADMIN, API_PUBLISHER, API_CONSUMER ...)
        - user:
          username: admin
          password: $2a$10$Ihk05VSds5rUSgMdsMVi9OKMIx2yUvMz7y9VP3rJmQeizZLrhLMyq
          roles: ADMIN
        - user:
          username: api1
          password: $2a$10$iXdXO4wAYdhx2LOwijsp7.PsoAZQ05zEdHxbriIYCbtyo.y32LTji
          roles: API_PUBLISHER, API_CONSUMER
        - user:
          username: application1
          password: $2a$10$2gtKPYRB9zaVaPcn5RBx/.3T.7SeZoDGs9GKqbo9G64fKyXFR1He.
          roles: API_CONSUMER
    - type: gravitee
      password-encoding: true
#    - type: ldap
#      embedded: true                        # embedded mode (true to use the embedded ldap server, usefull for test/demo, possible values : true or false)
      # if embedded is false set the following values
#      context-source-username: "uid=admin,ou=system"
#      context-source-password: "secret"
#      context-source-url: "ldap://localhost:10389/c=fr,o=aec,o=corp"
#      role-mapping: true                    # role mapping mode for ldap user (possible values : true or false)
      # if role-mapping is true set the following role mapper LDAP values (syntax { "user_ldap_role" : "user_new_added_ldap_role"})
#      role-mapper: {
#        ROLE_DEVELOPERS: ROLE_USER,
#        ROLE_MEMBERS: ROLE_USER,
#        ROLE_OWNERS: ROLE_ADMIN
#      }
#      user-dn-patterns: uid={0},ou=people   # user dn patterns (default 'uid={0},ou=people')
#      group-search-base: ou=groups          # groupe search base (default 'ou=groups')
#      context-source-base: c=fr,o=aec,o=corp # the context source base

# SMTP configuration used to send mails
email:
  host: smtp.my.domain
#  port: 465
  from: noreply@my.domain
  username: user@my.domain
  password: password

# Mail templates
#templates:
#  path: ${gravitee.home}/templates

# Referenced properties
ds:
  mongodb:
    dbname: gravitee
    host: localhost
    port: 27017
  elastic:
    host: localhost
    port: 9300