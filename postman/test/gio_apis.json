{
	"info": {
		"_postman_id": "aa3c95c3-8b22-4a30-96c9-24923cbc43f1",
		"name": "APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Publishing",
			"item": [
				{
					"name": "Not published",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5166061d-2222-463a-937c-327a9954bc97",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b15a51a7-14c7-4e65-b980-4a572c1f45b0",
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4fe37a32-b479-4b67-92be-87bf92f44530",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a4f1cf0e-f12e-480d-8147-888228d49940",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1f882b58-34a4-4467-b7d1-21b4ee7fd66b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78bd07a6-e754-453b-bce8-d8f4f0cd48e3",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "84d0308b-cd90-4d5b-ae9a-07df1b94e5d1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7ea91976-58de-4f98-a047-ea71c6782366",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2802e92-33a9-42ac-9ba5-351ac4dc7ce0",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09602947-131b-44ef-900a-4c70770cb099",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "625b271c-ddfb-4fd2-84a5-d571f9957ed4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e1ee9aae-85e5-4dc9-969f-f09dd3fb7264",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4e333b0-e736-49a9-89c1-65bac70c910c",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "27f16de1-3127-4ccb-96e9-bd5515ec5c77",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "ap1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4cebe649-555c-4895-9e2e-cb22af2a073e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "27c821d8-613b-41f8-a465-2410103ecb18",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "763e1239-e333-4c32-887d-2812d8667a11",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a6bb1a5-1159-46d1-b864-a324863a0bcb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "62a5261d-43da-4af3-a977-15ee72cbd2f5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a5e5aedc-e1f7-48a7-8a5f-df37d5e4cc4e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a2f0bf91-d788-43bf-bc9f-6cdb9448f1f0",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "914b9f1a-0810-42c1-bbe2-7507f800d03a",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "95411459-3c6b-4d9e-b8fb-3b171609a6f4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00dec6f8-0a4d-4cbc-816e-cf135bcb9c66",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e7407d0b-e86a-4514-a71f-4298f2f686f6",
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ec6c1886-01dc-465d-ac96-dde6b048909d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e69ce519-2456-45de-b00e-9ef47d32dd7e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b2453ebe-1e31-411e-9043-cd0693935776",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1aab950e-29c6-43ac-a9f8-e8efaa962339",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Published",
					"item": [
						{
							"name": "--Prepare--",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fab342cd-e739-47fa-88d7-0c49f7c47d3b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e32dbb8f-69d9-4ca8-b78f-04e4fd301040",
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e50c4dd5-51d8-4066-941f-dc9d85f8c142",
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"delete jsonData.workflow_state;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e27559a3-9f7b-4614-ae4f-452276e9eee4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b9a0c113-e145-4146-b007-862fa93ec7f2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a9d359a6-61ea-486f-b30d-5313e574d738",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9857f55-482c-4ee9-bdea-722b81d889bc",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "98a1e03b-a280-4414-88a4-c95104470bc3",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e5b5c0a-e44d-43bb-8caf-8146b8848265",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "840653c7-3a9f-4089-8864-6677ffdd3db5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "deebce4f-9aec-4aea-8281-13340a0db57f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4237f18-b1aa-4d8f-b6cd-570fcdf901fd",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "93997724-8012-40bb-9307-709aa2fda3fe",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f8ade350-5a54-41ec-a387-01ee404a0980",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7873b06-bd3e-4584-9f04-2042a519f4c5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "60b7e3e5-3a96-4dba-9f9e-a3c53453ad72",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must not be public\", function () {",
													"    pm.expect(jsonData.public).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ab01c1bf-ee48-4a77-af4b-07049d1ff9e0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b9ffb822-135b-4388-96c4-75f0dbbcd213",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4400d156-5e16-4803-a849-6456a1ef422a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0523d5-3ab7-433d-a05f-76aa84563ce7",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2bbdf211-4100-44c9-bb1c-58f5662a4c67",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "76a5a6ad-8ebe-443c-8e73-5e3cd1e9867c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "596c67df-07b7-45a2-9b80-25af89e2806b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f9225ad-b198-4e62-8392-69bbee917915",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b66de33a-71fd-48c4-b61e-db8bdf727b49",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c87c3740-e90a-44b1-abd2-ad6755bdddb3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "acbd9b6e-a905-41a2-8746-10372131bbdb",
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "88dceb95-ef45-4a22-b7f7-b1f31a6c8ed6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "497361e9-2bfd-49cc-8a71-02d45316dee3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e50859e9-56bf-493e-8d09-0e117bd98237",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8941e345-4419-4b67-bf84-033f6e8a257f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Visibility",
			"item": [
				{
					"name": "Private",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cf9f9ab3-54f9-4fb9-9e9e-4e7a0634151b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "83142c72-d64a-4fe8-a755-ffa664dbd31f",
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2e150759-afee-4124-860a-7636c1bad742",
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"delete jsonData.workflow_state;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e1f5f716-f458-4dc2-a3d0-e7b16500a724",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c991dfe-4e79-4010-8385-5217e6cf1a61",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
													"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
													"    pm.collectionVariables.set(\"user_member_id\", user.id);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b208d649-60fe-4ad3-ab9e-15d4f05481bf",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"search",
												"users",
												""
											],
											"query": [
												{
													"key": "q",
													"value": "user"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add member User to API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a126a07-4b92-4b9f-89a3-89c1cda3ecea",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "eb692710-2cd9-48cd-b8f0-90325d8fc40f",
												"exec": [
													"var user = JSON.parse(pm.collectionVariables.get(\"user_member\"));",
													"",
													"pm.variables.set(\"user_id\", user.id);",
													"pm.variables.set(\"user_ref\", user.reference);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{user_id}}\",\n    \"reference\": \"{{user_ref}}\",\n    \"role\": \"USER\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "660780ce-70e3-46c4-9924-e6dde3941e04",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fceb4b4f-4ebc-4292-b60e-fecb0979cfbd",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78f00789-f5f6-4ae7-b243-be36bf06682c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b3a5b046-48ce-48c4-9541-2191d3c390df",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ce1aa89a-db8f-446e-afc0-13b971aa4a6c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7658cbb9-748d-4409-a494-98f795757d6c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d744f95-59aa-4296-acce-a49567fe4aa2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7297d7db-3829-4ded-b184-ee6857a9a16f",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6701a55e-84e3-44d3-8a42-782c78c23294",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "86dda352-3093-403e-9d90-a9553d42e3db",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae192be5-9293-4445-9634-0e85fc58a2a2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1eaa0b1f-b405-42df-83bd-a11009ba0c6e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must not be public\", function () {",
													"    pm.expect(jsonData.public).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "52873683-2fa6-4933-9fc6-03122c3f239c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "486cfc4d-efbf-4a16-bf03-6c98444775ce",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63422d6a-ed40-4cd2-b636-2d486df0791d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5fb6931e-914c-473d-b08c-b7b484ffa4f1",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d1fff958-1cb6-4947-83d3-f07bac2a7cbf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d5bfec01-072a-484d-a36c-6ed1f67948c9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05a9db4d-a9b1-4159-bb5d-0429bc2c3e15",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbd187e7-9755-4781-a053-2520b566e3b7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must not be public\", function () {",
													"    pm.expect(jsonData.public).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3ea89346-51dc-42a9-9b57-f7fd88c03d2b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d32ae47f-c9c2-4295-a2ce-b2d24292fc76",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Remove member User from API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "880d3e5f-6210-4f51-893e-167526739829",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members?user={{user_member_id}}",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"query": [
												{
													"key": "user",
													"value": "{{user_member_id}}"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6988b1cc-7812-4c30-8517-073bf9f88024",
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2e773421-d476-44c9-8770-d281c9b25cd3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a04384fc-7e7a-4b1a-bca2-17af6b9bf852",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2238b39c-b187-459e-8c83-6948ba4864a1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c563918e-400a-48e5-a97a-f6bb66d12f45",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Public",
					"item": [
						{
							"name": "--Prepare--",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "457b467e-c364-4b54-b475-3b30a8b17081",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ab44a280-ece2-4f80-acbb-ad25b5870f5c",
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fb5e96ce-08c6-4c99-b6c1-8452fd1afc1d",
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"delete jsonData.workflow_state;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c29c1ee3-0629-487f-97ac-388151b7a946",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a48ea464-b7c1-4cf3-bda2-4c625b77bf7c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
													"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
													"    pm.collectionVariables.set(\"user_member_id\", user.id);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "48f4e1e3-de75-440d-9105-f8a6d885cdbe",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"search",
												"users",
												""
											],
											"query": [
												{
													"key": "q",
													"value": "user"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add member User to API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "21610ded-eee3-4ac6-9e18-ff84d0e9de3c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2e82e01a-ce37-4dcf-ac0d-67bd1576d252",
												"exec": [
													"var user = JSON.parse(pm.collectionVariables.get(\"user_member\"));",
													"",
													"pm.variables.set(\"user_id\", user.id);",
													"pm.variables.set(\"user_ref\", user.reference);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{user_id}}\",\n    \"reference\": \"{{user_ref}}\",\n    \"role\": \"USER\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Make API public",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8cc6d8a-0c5b-4f67-8835-54fc4277fa0e",
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"jsonData.visibility = 'public';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4190e785-6d0d-4001-a18c-45c4b6ccf470",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    pm.expect(jsonData.visibility).to.eql(\"public\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7980f08c-8414-4581-90ad-6c8a81d8fcfe",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3412ee86-d96f-425c-b428-1444f427361e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2cc7e8dd-29d9-43a5-bbd2-4c8e949f360e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1222cb0c-c3c5-4b7e-b543-2f2a1a8d4357",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2718fd12-50ba-41af-9fc8-5f2f9f24e392",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "54606131-09f6-4eec-8846-d874332b82b7",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70c2b594-2140-40b9-9d3e-f7a1f41ef833",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e9850bc-6c1c-4677-be3d-df3a6b0e3d18",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f505727a-8ccc-49cf-97f3-98e33b65469e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a9ff5475-67eb-458b-ab2b-4333ae894312",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8526e4fb-301f-4a26-befa-b83a380dc930",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d7b782-96a1-4d48-906f-566303c96aa5",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "ap1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "53b29c9c-9822-4a06-8f41-0973527f178d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "627098b1-7861-4426-a388-19940bd4d3f7",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0779a096-eab0-4f73-be9b-a9dc67a6df05",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7f39592a-dac7-474c-9dcf-eacbfdc60652",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8c1a1ede-bb3d-4640-af2b-436c3a66025e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e251b106-7ced-4894-9488-aae4c2d152e6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88a7a941-709d-4332-bac0-1e31fc95e3cc",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "84fd6d44-2bec-45cf-bfb5-428950f0073f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "18a05dc5-b20c-4f04-bd37-44d347b38f79",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9633b868-c65c-4ee2-a3ef-1a117e98c8da",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Remove member User from API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26a2f999-5a28-4887-9061-f18c716439df",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members?user={{user_member_id}}",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"query": [
												{
													"key": "user",
													"value": "{{user_member_id}}"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1831f436-c29d-4304-9301-58807e6bdd83",
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "49bc7b4d-64c8-4866-b1c8-f6a11192ec99",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d246ef3b-4c6c-4000-93d7-f2d2442fd07a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "34899fcf-2352-4fff-82b7-f70295e78372",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dc7348fa-09d8-4865-b3d9-afc6737bb900",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Quality",
			"item": [
				{
					"name": "-- Prepare --",
					"item": [
						{
							"name": "Enable API review and set weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7554a3e6-385b-481d-9d64-d48911b73913",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiReview\": {\n        \"enabled\": true\n    },\n    \"apiQualityMetrics\": {\n        \"enabled\": true,\n        \"functionalDocumentationWeight\": null,\n        \"technicalDocumentationWeight\": 0,\n        \"descriptionWeight\": 25,\n        \"descriptionMinLength\": 25,\n        \"logoWeight\": 0,\n        \"categoriesWeight\": 0,\n        \"labelsWeight\": 25,\n        \"healthcheckWeight\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a manual rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "605ba068-9b3a-45dd-bd35-08d9e040e71d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_rule\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_rule_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"This is a manual rule to check\",\n    \"name\": \"Postman quality rule\",\n    \"weight\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create REVIEWER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4ef19c7-15b9-4a2e-a6ee-101cbf8f9492",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_reviewer_group\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_reviewer_group_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Postman Reviewer\",\n    \"event_rules\": [\n        {\n            \"event\": \"API_CREATE\"\n        }\n    ],\n    \"lock_api_role\": false,\n    \"lock_application_role\": false,\n    \"disable_membership_notifications\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate REVIEWER group to existing APIS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "572597f7-d020-49ae-982f-e52e60711aec",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId/memberships?type=api",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId",
										"memberships"
									],
									"query": [
										{
											"key": "type",
											"value": "api"
										}
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reviewer_group_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "733c4fdb-a1b3-48cb-9e0c-25ab823972bb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
											"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
											"    pm.collectionVariables.set(\"user_member_reference\", user.reference);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0728c8a5-df88-48ac-92e5-ac034fa85e1d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"search",
										"users",
										""
									],
									"query": [
										{
											"key": "q",
											"value": "user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add REVIEWER member to group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e106b4c-b7da-4124-82f5-f52f03239ef5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68f6b84d-1c78-41da-b2bc-a8ba6db79d3f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"reference\": \"{{user_member_reference}}\",\n        \"roles\": [\n            {\n                \"scope\": \"API\",\n                \"name\": \"REVIEWER\"\n            },\n            {\n                \"scope\": \"APPLICATION\",\n                \"name\": \"USER\"\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId/members",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId",
										"members"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reviewer_group_id}}"
										}
									]
								},
								"description": "Use a group a reviewer which is not directly linked to the API."
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "63f0d8fd-f040-4f84-a930-3e36c0821b1f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f0e5f648-c969-40b2-9de0-88b4e83848de",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API publisher asks for review",
					"item": [
						{
							"name": "Import API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b4d7613-4785-4558-aef2-19fad7c866bc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"});",
											"",
											"pm.test(\"API must be draft\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"draft\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-review\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a label to API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "40786760-9e3e-4039-b5d8-f9b3d4a6cdf7",
										"exec": [
											"var createdApi = JSON.parse(pm.collectionVariables.get('created_api'));",
											"",
											"delete createdApi.id;",
											"delete createdApi.id;",
											"delete createdApi.state;",
											"delete createdApi.created_at;",
											"delete createdApi.updated_at;",
											"delete createdApi.owner;",
											"delete createdApi.context_path;",
											"delete createdApi.workflow_state;",
											"createdApi.labels = [\"quality\"];",
											"",
											"pm.collectionVariables.set('modified_api', JSON.stringify(createdApi));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ba5cbe73-912a-4cb2-9ec8-27688d05d145",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should contain label\", function () {",
											"    pm.expect(jsonData.labels).to.be.not.empty;",
											"    pm.expect(jsonData.labels).to.include(\"quality\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{modified_api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ask for review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6dba19ea-bee6-43bf-9bb6-50d1e3dc209a",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=ASK",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "ASK"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot start the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd850460-a76d-42c4-9bae-5a8b6019db84",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().message).to.eql(\"API can not be started without being reviewed\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=START",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5e0ded85-588e-475a-b81f-14115cbd4596",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9ceb995f-6994-411e-804d-d9671e2de180",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Reviewer reviews",
					"item": [
						{
							"name": "Should have task to review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b63e111-3910-4f2f-a78d-71ef9419155b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have one task for reviewing\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"\tvar apiFromList = jsonData.data.find(api => api.data.referenceId === pm.collectionVariables.get('created_api_id'));",
											"    pm.expect(apiFromList.data.type).to.eql(\"REVIEW\");",
											"    pm.expect(apiFromList.data.state).to.eql(\"IN_REVIEW\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/user/tasks",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"user",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get APIs contains created api with good status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e45859d8-c5da-449e-80de-01f8f5600535",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"APIs list must not empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"    var apiFromList = jsonData.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
											"\tpm.expect(apiFromList).to.be.not.null;",
											"    pm.expect(apiFromList.workflow_state).to.eql(\"in_review\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Xsrf-Token",
										"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "X-Recaptcha-Token",
										"value": ""
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec8a8386-3dd3-431c-b136-73e71602c8d4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"});",
											"",
											"pm.test(\"API must be draft\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"in_review\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5bd84bc1-cbb8-44d5-8d77-d83d66ddc0f1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"There should have quality rule\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"\tvar ruleFromList = jsonData.find(rule => rule.id === pm.collectionVariables.get('created_rule_id'));",
											"    pm.expect(ruleFromList.weight).to.eql(50);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0680bbe-a09d-4442-98ad-3bd1188abb37",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(0.25);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(false);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(false);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept custom rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "900aa867-fc86-49c9-bf43-08673d669a7c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Rule should be checked\", function () {",
											"    pm.expect(jsonData.quality_rule).to.eql(pm.collectionVariables.get('created_rule_id'));",
											"    pm.expect(jsonData.checked).to.be.true;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": \"{{created_api_id}}\",\n    \"quality_rule\": \"{{created_rule_id}}\",\n    \"checked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality-rules/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality-rules",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6b60b23-bcb5-41e5-95bc-6b31ebd35aea",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(0.75);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(false);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e01b8efc-2fc6-460f-8cad-5410c138df3e",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=REJECT",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "REJECT"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "password",
								"type": "string"
							},
							{
								"key": "username",
								"value": "user",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "325b4fa6-3aa5-4594-854e-82b2f2fe5672",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4e8245a1-79a0-4781-b926-6a410dd615e6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API publisher fix API and asks for review",
					"item": [
						{
							"name": "Should have task to review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9be61e8-0d97-4a08-8e35-3c08efcb3d6b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have one task for reviewing\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"\tvar apiFromList = jsonData.data.find(api => api.data.referenceId === pm.collectionVariables.get('created_api_id'));",
											"    pm.expect(apiFromList.data.type).to.eql(\"REVIEW\");",
											"    pm.expect(apiFromList.data.state).to.eql(\"REQUEST_FOR_CHANGES\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/user/tasks",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"user",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a valid description to API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6e54935e-9728-4d08-8db2-1ecdccc27b13",
										"exec": [
											"var createdApi = JSON.parse(pm.collectionVariables.get('modified_api'));",
											"",
											"delete createdApi.id;",
											"delete createdApi.id;",
											"delete createdApi.state;",
											"delete createdApi.created_at;",
											"delete createdApi.updated_at;",
											"delete createdApi.owner;",
											"delete createdApi.context_path;",
											"delete createdApi.workflow_state;",
											"createdApi.description = \"This is a more than 25 characters description\";",
											"",
											"pm.collectionVariables.set('modified_api', JSON.stringify(createdApi));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a382afff-bd99-4a50-a0cd-14e07a04a562",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should contain label\", function () {",
											"    pm.expect(jsonData.labels).to.be.not.empty;",
											"    pm.expect(jsonData.labels).to.include(\"quality\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{modified_api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ask for review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "497b227a-48be-4025-b663-b2e57f09f7ab",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=ASK",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "ASK"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a575fba-407f-4636-9922-93238a2ed36a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(1);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot start the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e7a6d7e-0792-4494-ba60-1fb9df2cc5a4",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().message).to.eql(\"API can not be started without being reviewed\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=START",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bb7724b9-cbe8-4442-9932-5fb4f5bb6fd0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "56181551-7117-47a2-95ca-4ddea4557c96",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Reviewer reviews",
					"item": [
						{
							"name": "Should have task to review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d40b73e-d0a2-4f5e-9036-bef2c04d1700",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have one task for reviewing\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"\tvar apiFromList = jsonData.data.find(api => api.data.referenceId === pm.collectionVariables.get('created_api_id'));",
											"    pm.expect(apiFromList.data.type).to.eql(\"REVIEW\");",
											"    pm.expect(apiFromList.data.state).to.eql(\"IN_REVIEW\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/user/tasks",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"user",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get APIs contains api in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a971bd27-7989-4e34-8a49-852ea5356518",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"APIs list must not empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"    var apiFromList = jsonData.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
											"\tpm.expect(apiFromList).to.be.not.null;",
											"    pm.expect(apiFromList.workflow_state).to.eql(\"in_review\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Xsrf-Token",
										"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "X-Recaptcha-Token",
										"value": ""
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7848cb74-f157-4627-a474-868671270f2f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"});",
											"",
											"pm.test(\"API must be in review\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"in_review\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16183302-2ee2-40b4-8cd8-ae4cac8de7ca",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"There should have quality rule\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"\tvar ruleFromList = jsonData.find(rule => rule.id === pm.collectionVariables.get('created_rule_id'));",
											"    pm.expect(ruleFromList.weight).to.eql(50);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e991d7f-cc6c-41b4-9c54-ed85ac909261",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(1);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept review",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d34d51a-ef6a-44f0-aa76-39a4ce8a660f",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=ACCEPT",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "ACCEPT"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "password",
								"type": "string"
							},
							{
								"key": "username",
								"value": "user",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a10eb476-8779-4037-8853-5cae6b83f872",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ce49524e-6c91-40eb-95ef-d517fe2e7580",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API publisher can start the API",
					"item": [
						{
							"name": "Get APIs contains api with review ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6af05de-ff61-44d4-b99e-bc065bd24355",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"APIs list must not empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"    var apiFromList = jsonData.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
											"\tpm.expect(apiFromList).to.be.not.null;",
											"    pm.expect(apiFromList.workflow_state).to.eql(\"review_ok\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Xsrf-Token",
										"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "X-Recaptcha-Token",
										"value": ""
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API with review ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fda83498-012e-45c7-882a-2d7bc075b36d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"});",
											"",
											"pm.test(\"API review must be ok\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"review_ok\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64541da7-38e7-47ef-8182-5a929c53939d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(1);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Start the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57e57f1e-257f-46a4-859f-4155a61d0cf5",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=START",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "68681e0b-3cd5-42bd-9fca-409a4c53cc4f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "848312b9-1681-4963-ac2c-4222a4bfc37b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "-- Clean up --",
					"item": [
						{
							"name": "Stop the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c6a5bfa-606a-43da-a240-38265963b80c",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=STOP",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "STOP"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2bcfdac-981e-4129-bf65-25bad90fbfb6",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable API review and reset weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ae8b296-600a-495b-8c36-5b4133f8dfbc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiReview\": {\n        \"enabled\": false\n    },\n    \"apiQualityMetrics\": {\n        \"enabled\": false,\n        \"functionalDocumentationWeight\": null,\n        \"technicalDocumentationWeight\": 0,\n        \"descriptionWeight\": 0,\n        \"descriptionMinLength\": 100,\n        \"logoWeight\": 0,\n        \"categoriesWeight\": 0,\n        \"labelsWeight\": 0,\n        \"healthcheckWeight\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete manual rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38a4bb65-b45b-49c8-8342-f127e0119cd0",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules/:ruleId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules",
										":ruleId"
									],
									"query": [
										{
											"key": "ruleId",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "ruleId",
											"value": "{{created_rule_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete REVIEWER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3007035e-32ca-4a1a-b012-3e3df853db58",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reviewer_group_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "429b4e64-b871-4d2d-b137-db502c14aa02",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c4d26618-9d7b-41ad-a2fb-18064cd5c4b6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Rating",
			"item": [
				{
					"name": "-- Prepare --",
					"item": [
						{
							"name": "Disable API rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ef77919-9ef6-4235-aeb0-3aa43703a996",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"portal\": {\n        \"rating\": {\n            \"enabled\": false,\n            \"comment\": {\n                \"mandatory\": false\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Import API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96be20bd-85ba-4a25-92bd-b3746a2b7c97",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16a7bb1c-3853-4c7e-b1d4-23fb53dbf40e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-rating\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fe56bb74-6795-45db-972f-f6531981d475",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "68e7e26a-fcae-47bd-8ceb-c6b67e581ad2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Rate the api",
					"item": [
						{
							"name": "Rate API by api1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0b44a7fd-d4eb-4c35-bfc4-3499faa7a994",
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75925d6e-307b-44af-ab25-5d77e9b2fd2b",
										"exec": [
											"pm.test(\"Status code is 503\", function () {",
											"    pm.response.to.have.status(503);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Rate API by admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d1e09486-ad1e-4c5d-aae9-8a7812dfbea6",
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2f0ad077-4f43-4639-bf6f-bfab833299ab",
										"exec": [
											"pm.test(\"Status code is 503\", function () {",
											"    pm.response.to.have.status(503);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Enable rating service",
					"item": [
						{
							"name": "Enable API rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f53a64f-66c4-4be1-a3fa-fab17c2b3d00",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"portal\": {\n        \"rating\": {\n            \"enabled\": true,\n            \"comment\": {\n                \"mandatory\": false\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Rate the api",
					"item": [
						{
							"name": "Rate API by api1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "25cf2fb2-8952-4d2e-bde9-b13f1737fee0",
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bff7038-15ac-4de3-8143-45382d9af786",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Rate is good\", function() {",
											"    pm.expect(jsonData.rate).to.eql(pm.collectionVariables.get(\"api_rate\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Rate API by admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "710e0820-915c-4c7b-b5f7-40b667beb9b9",
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d6866ece-ee62-4ded-84c5-a222ccc54abf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Rate is good\", function() {",
											"    pm.expect(jsonData.rate).to.eql(pm.collectionVariables.get(\"api_rate\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot rate API by api1 twice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ba9bf3af-8adc-43a8-932a-01dbef0da40c",
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d2047197-bc34-4d9f-b7c4-57c501aacc39",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot rate API by admin twice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f147cdd1-321a-47e4-b618-d7a3f07ee32e",
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75e9d2a4-f7dc-4756-a4d1-5c52f51be771",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "415709a8-4c29-4d31-8b8d-c6838fbb8d41",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "962d9e2f-dcdf-4c2f-be9c-2ea52065bd94",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "-- Clean up --",
					"item": [
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc4b17aa-a801-42b6-ade5-f132e3203e1c",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable API rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "323c74fe-0423-4498-b769-c386628ee948",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"portal\": {\n        \"rating\": {\n            \"enabled\": false,\n            \"comment\": {\n                \"mandatory\": false\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2637dae-4292-42e5-a05b-fb656059df3f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b6f33857-79e1-4a3e-8e15-7b69bc01fda1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e40aba6c-d4c1-4704-bb95-02b79edd70b4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7bcc797c-1d91-40b1-90df-f3786f8f2dba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Documentation",
			"item": [
				{
					"name": "-- Prepare --",
					"item": [
						{
							"name": "Create READER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5713304d-8ee5-43e1-8344-0c229a453425",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_reader_group\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_reader_group_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Postman Reader\",\n    \"event_rules\": [\n        {\n            \"event\": \"API_CREATE\"\n        }\n    ],\n    \"lock_api_role\": false,\n    \"lock_application_role\": false,\n    \"disable_membership_notifications\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33bf6311-5d9b-4c30-b21a-15ca9cfad0fe",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
											"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
											"    pm.collectionVariables.set(\"user_member_reference\", user.reference);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ae2a91d6-bd5a-49ef-b3e8-5cb58f377fb3",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"search",
										"users",
										""
									],
									"query": [
										{
											"key": "q",
											"value": "user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add READER member to group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ffb6f7bc-9fb1-4624-8475-4ba7bb0e9e04",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8755c9f5-3810-4ed0-b8b5-80bbf342a029",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"reference\": \"{{user_member_reference}}\",\n        \"roles\": [\n            {\n                \"scope\": \"API\",\n                \"name\": \"USER\"\n            },\n            {\n                \"scope\": \"APPLICATION\",\n                \"name\": \"USER\"\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId/members",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId",
										"members"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reader_group_id}}"
										}
									]
								},
								"description": "Use a group a reviewer which is not directly linked to the API."
							},
							"response": []
						},
						{
							"name": "Import API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "314a8299-cf1e-4b8e-8ea9-e294fe97672b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b8757b51-9233-485e-bf93-20b8fba81f9c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-documentation\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b3542fcf-1c3f-4aa8-b4a9-7b75335f9388",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
											"jsonData.lifecycle_state = 'published';",
											"",
											"delete jsonData.id;",
											"delete jsonData.state;",
											"delete jsonData.created_at;",
											"delete jsonData.updated_at;",
											"delete jsonData.owner;",
											"delete jsonData.context_path;",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8af617f1-c2f4-4128-9d4f-a737ad96b75f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{created_api}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Make API public",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "204e8592-5980-4ee4-8589-24c9c3a4d465",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
											"jsonData.lifecycle_state = 'published';",
											"jsonData.visibility = 'public';",
											"",
											"delete jsonData.id;",
											"delete jsonData.state;",
											"delete jsonData.created_at;",
											"delete jsonData.updated_at;",
											"delete jsonData.owner;",
											"delete jsonData.context_path;",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d88d6175-707f-4238-b802-704bc64d3369",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"    pm.expect(jsonData.visibility).to.eql(\"public\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{created_api}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48144bb3-ec52-42e8-8032-4f2c1a6f888d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0bd4b83a-4807-4ebc-830b-1dad99aa457c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create UNPUBLISHED homepage and page",
					"item": [
						{
							"name": "Create homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c60ae5d-c93c-4591-b1da-14d214c0a9e5",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be unpublished\", function () {",
											"    pm.expect(jsonData.published).to.be.false;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_homepage\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_homepage_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Homepage\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"This is my homepage\",\n    \"homepage\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f976bea9-05f5-42da-b1d8-9f0674a9d38e",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be unpublished\", function () {",
											"    pm.expect(jsonData.published).to.be.false;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"documentation.md\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"# Here is a documentation file\\n\\nFake documentation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "98175a07-42a5-42d7-9dc4-e02af39caf04",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b88501bc-f8d2-4c30-95b3-a0c8260eb8bb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get homepage empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f2c79d2-2c99-4dfd-a002-adc1f0bcc850",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?homepage=true",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "homepage",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff8994fb-364d-43cf-818a-911b9b572113",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e84a623b-ca04-4f0a-b9a7-164561519bb9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f5a99b0b-328a-4c9f-b6a4-ee592fe96f3a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Publish previous pages",
					"item": [
						{
							"name": "Publish homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d0d22e3-7d06-44c6-8058-1fd12190e4f7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_homepage\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_homepage_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_homepage_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a9f5b0d-ea5a-47fd-b423-c12f08b6d47a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "68da5c8c-5d33-45f7-85c8-05b5d88ab5f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "99d9e864-022a-46e6-9af2-c9b5e3038841",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get homepage contains created homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ff3d80f-7722-4ec7-99c6-20a2fb07eb4a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.data.find(page => page.id === pm.collectionVariables.get('created_homepage_id'))",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?homepage=true",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "homepage",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages contains created page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e18eb972-e992-450c-84c2-795c9d4cae6e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.data.find(page => page.id === pm.collectionVariables.get('created_page_id'))",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "937a010b-1384-44b5-89ff-0b8f4ac85f32",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5c3aa938-7102-4129-8f44-49b820dbe1e4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create FOLDER with one page and move one into it",
					"item": [
						{
							"name": "Create folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b0f086d-4c0f-4950-862b-b8bdcd8af529",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be unpublished\", function () {",
											"    pm.expect(jsonData.published).to.be.false;",
											"});",
											"",
											"pm.test(\"Should be a folder\", function () {",
											"    pm.expect(jsonData.type).to.eql(\"FOLDER\");",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Folder\",\n    \"type\": \"FOLDER\",\n    \"parentId\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8620bb4-d6b7-49ca-84a4-bb45761bc6ac",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PUBLISHED page inside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e6c6ee-8005-45b7-9932-6d1bf7d452b0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have parentId\", function () {",
											"    pm.expect(jsonData.parentId).to.eql(pm.collectionVariables.get(\"created_folder_id\"));",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"pm.test(\"Should be a folder\", function () {",
											"    pm.expect(jsonData.type).to.eql(\"MARKDOWN\");",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_inside_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_inside_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"In folder page\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"{{created_folder_id}}\",\n    \"content\": \"this page is created directly inside folder\",\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PUBLISHED page outside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7319a191-b5cb-4643-af30-b7192ae277a9",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_outside_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_outside_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Outside folder\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"This is a page created outside the folder\",\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move outside page inside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "590d5a8c-5295-40fe-9045-40493e19183a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have parentId\", function () {",
											"    pm.expect(jsonData.parentId).to.eql(pm.collectionVariables.get(\"created_folder_id\"));",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_outside_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_outside_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parentId\": \"{{created_folder_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_outside_folder_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "10b8ba98-9c1c-4b4a-a46c-96b32aa13434",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "584ff9af-1fda-4e3b-8a40-424a3f1b8584",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get homepage contains created homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae08f669-2449-42cf-814e-dfd63414e210",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.data.find(page => page.id === pm.collectionVariables.get('created_homepage_id'))",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?homepage=true",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "homepage",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages contains created pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cff2ce0d-ced5-4c5a-93af-92c425639b2e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_page_id\"),",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get page ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8516999-ba40-40cf-83da-976ecfcf8545",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page_outside_folder\"));",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(page.name);",
											"});",
											"",
											"pm.test(\"Should have same content\", function () {",
											"    pm.expect(jsonData.content).to.eql(page.content);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_outside_folder_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fa33fd5b-730a-4eba-9b9d-1566e89c62a3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c0a6c751-1e36-4a4b-adff-dbf4accd2521",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Add metadata with templating",
					"item": [
						{
							"name": "Add API state metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42c2f4ff-368a-4877-a758-12594f1ea929",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have key\", function () {",
											"    pm.expect(jsonData.key).to.eql(\"api-state\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_metadata\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_metadata_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"format\": \"string\",\n    \"name\": \"api-state\",\n    \"value\": \"${api.state}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/metadata",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"metadata"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PUBLISHED page using templating",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c8a5d6a-9a17-422b-90a7-b8221ba63cd5",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"pm.test(\"Should contain template string\", function() {",
											"    pm.expect(jsonData.content).to.eql(\"${api.visibility}\\n\\n${api.metadata['api-state']}\");",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_metadata\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_metadata_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"metadata\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"${api.visibility}\\n\\n${api.metadata['api-state']}\",\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3c8d8e21-ed70-48f2-889d-b09db64b915a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ace243aa-7075-4b48-9e15-1b31427bbad7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get page ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a5a15d4-b8f8-43a0-b44b-b97ac33f33d3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page_metadata\"));",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(page.name);",
											"});",
											"",
											"pm.test(\"Should have interpolated content\", function () {",
											"    pm.expect(jsonData.content).to.eql(\"PUBLIC\\n\\nSTOPPED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_metadata_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "64ce1548-e42d-4df8-a577-f188af0d8d61",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7fa16e5a-4615-48fe-91e1-83dd6db18230",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Exclude group",
					"item": [
						{
							"name": "READER can get pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46c8b4d6-6026-49c5-b498-304b7dc9bb96",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_page_id\"),",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_metadata_id\")",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "READER can get page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fbeb5ac-4451-4d93-984a-49c64eda0427",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page\"));",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(page.name);",
											"});",
											"",
											"pm.test(\"Should have same content\", function () {",
											"    pm.expect(jsonData.content).to.eql(page.content);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude READER group",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7ddf11e7-757f-435f-8051-e10227025774",
										"exec": [
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page\"));",
											"",
											"delete page.id;",
											"delete page.type;",
											"delete page.lastModificationDate;",
											"delete page.contentType;",
											"delete page.parentPath;",
											"delete page.messages;",
											"delete page.api;",
											"",
											"page.excluded_groups = [pm.collectionVariables.get(\"created_reader_group_id\")];",
											"",
											"pm.collectionVariables.set(\"created_page\", JSON.stringify(page));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e8dddfa5-3fc8-4fc0-8f1c-b20f81195ee5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var page = pm.response.json();",
											"",
											"pm.test(\"Should have excluded group\", function() {",
											"    pm.expect(page.excluded_groups).to.have.members([pm.collectionVariables.get(\"created_reader_group_id\")]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{created_page}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "READER cannot get pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e99e655b-19d7-457c-90a9-4540dee4adb8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_metadata_id\")",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"))",
											"});",
											"",
											"pm.test(\"Excluded page should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_page_id\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "READER cannot get page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c3d0a7c-1d75-4d24-a370-d55863204bc9",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0eb985aa-f256-4010-a095-136fc4533dac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b9608346-8429-4429-b4c8-137a1c64b8b8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Translate",
					"item": [
						{
							"name": "Translate page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2aea3c88-3fba-434f-a3fe-382dac3fdba7",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var page = pm.response.json();",
											"",
											"pm.test(\"Type is translation\", function() {",
											"    pm.expect(page.type).to.eql(\"TRANSLATION\");",
											"});",
											"",
											"pm.test(\"Should be published\", function() {",
											"    pm.expect(page.published).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"TRANSLATION\",\n    \"parentId\": \"{{created_page_id}}\",\n    \"configuration\": {\n        \"inheritContent\": \"false\",\n        \"lang\": \"fr\"\n    },\n    \"name\": \"Fausse documentation\",\n    \"content\": \"Fausse documentation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d4bbd1af-83f1-45e6-8c3a-3c874c8a65f1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2ae68d5f-602a-4ab7-afb2-1b3c9243ad18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get pages contains pages with translation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8d2eb0-4837-4af7-b9ff-c71b4bd07d2b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_page_id\"),",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_metadata_id\")",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"));",
											"});",
											"",
											"var translatedPage = jsonData.data.find(page => page.id === pm.collectionVariables.get(\"created_page_id\"));",
											"",
											"pm.test(\"Page should be translated\", function() {",
											"    pm.expect(translatedPage.name).to.eql(\"Fausse documentation\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "fr-FR,fr;q=0.9",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get page translated",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a5f47cd-98da-447d-afdf-f723a028defa",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(\"Fausse documentation\");",
											"});",
											"",
											"pm.test(\"Should have interpolated content\", function () {",
											"    pm.expect(jsonData.content).to.eql(\"Fausse documentation\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "fr-FR,fr;q=0.9",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "639f3b2c-9dbc-4c86-a6de-0e13da743e48",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7595d1b4-8303-4cd9-a614-bb7a4feb2cf6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Aside links",
					"item": [
						{
							"name": "Get pages contains aside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f461c6d-41f5-4835-8421-b854fc93992c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.find(page => page.name === \"Aside\" && page.type === \"SYSTEM_FOLDER\")",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.undefined;",
											"});",
											"",
											"pm.collectionVariables.set(\"aside_id\", page.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/?type=SYSTEM_FOLDER",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "SYSTEM_FOLDER"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add aside link to existing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d116a3b5-ddc9-4769-92f6-22a6eeb58f91",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var page = pm.response.json();",
											"",
											"pm.test(\"Type is translation\", function() {",
											"    pm.expect(page.type).to.eql(\"LINK\");",
											"});",
											"",
											"pm.test(\"Should be published\", function() {",
											"    pm.expect(page.published).to.be.true;",
											"});",
											"",
											"pm.test(\"Should have parent path Aside\", function() {",
											"    pm.expect(page.parentPath).to.eql(\"/Aside\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_link\", JSON.stringify(page));",
											"pm.collectionVariables.set(\"created_link_id\", page.id);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c16c36e3-a60e-4ca7-a730-39b45ceebd0c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Linked page\",\n    \"type\": \"LINK\",\n    \"parentId\": \"{{aside_id}}\",\n    \"configuration\": {\n        \"resourceType\": \"page\",\n        \"inherit\": \"false\",\n        \"isFolder\": false\n    },\n    \"content\": \"{{created_page_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "597ef225-89f9-44f3-ba2d-c7c8c549f0f9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eb41da8c-9d4b-4e3b-a2dd-ea2dd5faa4f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get links from aside",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02527b47-eb1c-4300-8149-15bf0df6a68f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"var createdLink = JSON.parse(pm.collectionVariables.get(\"created_link\"));",
											"",
											"var link = jsonData.slots.aside[0].links.find(link => link.name === createdLink.name);",
											"",
											"pm.test(\"Should have page reference\", function () {",
											"    pm.expect(link.resourceRef).to.eql(pm.collectionVariables.get(\"created_page_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"type": "text",
										"value": "fr-FR,fr;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/links",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"links"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a2258478-1f74-4027-8117-95317652f890",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5d17c949-eb59-4ec5-ae8e-5026adcef3a1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "-- Clean up --",
					"item": [
						{
							"name": "Delete metadata page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63be0514-1397-4cb1-a163-4ded03c5b2f0",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_metadata_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete page outside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42cdb30a-3377-4444-bf24-e6a80193a16b",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_outside_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete page inside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a104877-37f2-4fdb-a1a1-481b3f0c4e67",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_inside_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea379df5-45cb-484a-b898-4f4ce13a9aca",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete link",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9577e7a-c06b-43fe-a5dc-3ea07a6158bf",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_link_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11db6e6d-b9fd-456d-aab3-d16c13a23fba",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92acc60f-3309-42c0-ac17-d191d41ebe38",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_homepage_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete READER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3a4aa20-6fa8-45b5-afb4-32dcbe3da5f0",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reader_group_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a050dbf-9522-4599-8a0b-b1a2908d4c8a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "32bf53d8-ad33-47e8-a981-4c4d66656cab",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a70af83b-6c9e-4c40-a0ab-23b788688acb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1a2440ed-f3be-4686-b6df-64a07b2b37bd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Plans",
			"item": [
				{
					"name": "--Prepare--",
					"item": [
						{
							"name": "Create API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e9caf20-e0d6-4df3-a3ec-2710f17ede87",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and not published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"    pm.expect(jsonData.visibility).to.eql(\"private\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "036d94d1-ca70-458e-b81a-690c7558b54f",
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d074b6b2-4857-4bba-9fb7-91810e74e163",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
											"jsonData.lifecycle_state = 'published';",
											"jsonData.visibility = 'public';",
											"",
											"delete jsonData.id;",
											"delete jsonData.state;",
											"delete jsonData.created_at;",
											"delete jsonData.updated_at;",
											"delete jsonData.owner;",
											"delete jsonData.context_path;",
											"delete jsonData.workflow_state;",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9bb2acb9-388a-4a78-9119-e15298ca5cd4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"stopped\");",
											"    pm.expect(jsonData.visibility).to.eql(\"public\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"published\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{created_api}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create EXCLUDED group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05ccba96-7173-43c9-a0af-d5aa4448feae",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_excluded_group\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_excluded_group_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Postman Excluded\",\n    \"event_rules\": [\n        {\n            \"event\": \"API_CREATE\"\n        }\n    ],\n    \"lock_api_role\": false,\n    \"lock_application_role\": false,\n    \"disable_membership_notifications\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d475675-eade-4c6a-af88-e5811ebb48c5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
											"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
											"    pm.collectionVariables.set(\"user_member_reference\", user.reference);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a2cb4ba4-f49a-4771-929f-8ac049642ac2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"search",
										"users",
										""
									],
									"query": [
										{
											"key": "q",
											"value": "user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add EXCLUDED member to group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5fa9331-ad21-4047-a6b8-ee1264659c81",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "29cb8910-87c4-45ac-bc0e-365cefabde7c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"reference\": \"{{user_member_reference}}\",\n        \"roles\": [\n            {\n                \"scope\": \"API\",\n                \"name\": \"REVIEWER\"\n            },\n            {\n                \"scope\": \"APPLICATION\",\n                \"name\": \"USER\"\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:excludedGroupId/members",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":excludedGroupId",
										"members"
									],
									"variable": [
										{
											"key": "excludedGroupId",
											"value": "{{created_excluded_group_id}}"
										}
									]
								},
								"description": "Use a group a reviewer which is not directly linked to the API."
							},
							"response": []
						},
						{
							"name": "Create Application for subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcfae615-90d4-4151-91e9-2ff1fe68ca35",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_application_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "application1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "application1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"application\",\n\t\"description\":\"Application for 'Plans scenario'\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/applications",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"applications"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3394c496-f032-47d9-88f4-c3fb85623ed7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ad76daa4-133d-4413-8b1a-a25db15aafe8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07cd8ad6-2264-428a-bddf-5c6c157f8c8d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "abc7dba6-9285-4d53-9f9c-48e139038065",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c4181627-caaa-4e59-b04e-69a9472d9a93",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create Plan",
					"item": [
						{
							"name": "Create Plan for subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "750b14f6-a8b1-424d-966d-b38c42afad2d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_plan_id\", jsonData.id);",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"Plan to test\",\n\t\"description\": \"a plan for Plans Scenario\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7d1172c8-2b0c-49af-8f7d-25dda5f83f29",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a4dad95c-92af-4d43-a9b4-e1a09f961a1f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "900d07d3-5675-4ac0-9549-24252a4dfa8d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3ed8255-7361-4a0c-acab-bfe8d5b9fff4",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e7b08ae4-3019-4f47-8241-0a7a6e45a9a7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4a7941cf-f21f-48b4-82fe-7c9ab0445123",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Publish plan",
					"item": [
						{
							"name": "Publish created Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f985153d-2847-4270-a2d0-db8c945f8611",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Plan should be published\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"published\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId/_publish",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId",
										"_publish"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create and Accept subscription",
					"item": [
						{
							"name": "Create Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec6b74fe-b861-4644-9be9-d897a613bcc2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_subscription_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fc7f7213-0dea-414a-82c3-de2fd9ed50cb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "application1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "application1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"application\":\"{{created_application_id}}\",\n\t\"plan\":\"{{created_plan_id}}\",\n\t\"request\":\"for Plans scenario\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/subscriptions",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"subscriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a4381b7-9222-426e-b69f-60de95e570c8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_subscription_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "17aea2a9-9d4a-4905-b16a-3b14c44dceb6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customApiKey\": null,\n    \"accepted\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/subscriptions/:subscriptionId/_process",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"subscriptions",
										":subscriptionId",
										"_process"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "subscriptionId",
											"value": "{{created_subscription_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans contains created plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c66d5071-176d-4b56-a6f7-12db73d238b3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should not be empty\", function() {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"Plans array should contain created plan\", function() {",
											"    var plan = jsonData.find(plan => plan.id === pm.collectionVariables.get('created_plan_id'));",
											"    pm.expect(plan).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fb1eb3f-ab8b-46de-939c-2b5239037f1c",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6e8f7a03-2558-4e2b-b690-f14975584699",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "202faaf8-2392-4e7d-a441-59d81360cd25",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Exclude group",
					"item": [
						{
							"name": "EXCLUDED can get plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be8f0bc1-15b0-4e9c-a2b0-67510c8cbc64",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var planIds = jsonData.data.map(plan => plan.id);",
											"",
											"pm.test(\"Plan should be present\", function (){",
											"    pm.expect(planIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_plan_id\")",
											"    ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude EXCLUDED group",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "30fcd1ba-81d3-48e7-9265-68561dd0ea2a",
										"exec": [
											"var plan = JSON.parse(pm.collectionVariables.get(\"created_plan\"));",
											"",
											"",
											"delete plan.security;",
											"delete plan.type;",
											"delete plan.status;",
											"delete plan.api;",
											"delete plan.created_at;",
											"delete plan.updated_at;",
											"delete plan.flows;",
											"",
											"plan.order = 1;",
											"plan.excluded_groups = [pm.collectionVariables.get(\"created_excluded_group_id\")];",
											"",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(plan));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "739d0aad-dc31-48a6-b92b-f36db08885b2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var plan = pm.response.json();",
											"",
											"pm.test(\"Should have excluded group\", function() {",
											"    pm.expect(plan.excluded_groups).to.have.members([pm.collectionVariables.get(\"created_excluded_group_id\")]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{created_plan}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "EXCLUDED cannot get plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58f075e7-9d7f-4f5e-b732-f6f64ec74018",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c646f8c9-482c-4f8c-a290-a426f433c7ad",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b17615a5-114b-4af8-9283-93389dc869c9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Deprecate plan",
					"item": [
						{
							"name": "Deprecate plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76f437fc-9ed9-4226-a211-7a6d3343eb56",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var plan = pm.response.json();",
											"",
											"pm.test(\"Plan should be deprecated\", function() {",
											"    pm.expect(plan.status).to.eql(\"deprecated\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(plan));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId/_deprecate",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId",
										"_deprecate"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0a6270c-151f-4a45-b544-429f7bec6c88",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20380949-6862-4b0f-a8ee-f99b7dd5f3c5",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "af5dc154-9537-4e31-b9c7-1373e6da9da5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac3f80e3-64af-4016-9bce-395edb01eb63",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Close plan",
					"item": [
						{
							"name": "Get associated subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "adc4ae95-e5d4-4489-94a4-266c4de38431",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Should not be empty\", function() {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"var subscription = jsonData.find(sub => sub.id === pm.collectionVariables.get(\"created_subscription_id\"));",
											"",
											"pm.test(\"Should have right subscription\", function() {",
											"    pm.expect(subscription).to.be.not.null;",
											"    pm.expect(subscription.api).to.eql(pm.collectionVariables.get(\"created_api_id\"));",
											"    pm.expect(subscription.application).to.eql(pm.collectionVariables.get(\"created_application_id\"));",
											"    pm.expect(subscription.plan).to.eql(pm.collectionVariables.get(\"created_plan_id\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/subscriptions?plan={{created_plan_id}}&status=accepted,pending,rejected,closed",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"subscriptions"
									],
									"query": [
										{
											"key": "plan",
											"value": "{{created_plan_id}}"
										},
										{
											"key": "status",
											"value": "accepted,pending,rejected,closed"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Close plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "895e145c-26d6-4867-9c54-8f0fd583e8ee",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var plan = pm.response.json();",
											"",
											"pm.test(\"Plan should be deprecated\", function() {",
											"    pm.expect(plan.status).to.eql(\"closed\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(plan));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId/_close",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId",
										"_close"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "59958e78-2b43-4ab6-b339-3046fbe97e54",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "346a70f6-f6c5-442f-b897-4e04628b1d80",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f09cdeb-cf4f-4252-91f4-b0c17e1107ca",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a0a5d02-44ae-441c-81ba-92fa5a1294d9",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "96aaf67a-cf63-4fb6-9b35-3b6ee52f5643",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2737f1f7-ac89-4dde-9fdc-926499478b54",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "-- Clean Up --",
					"item": [
						{
							"name": "Delete application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9715ff0f-92ed-48f9-a6d7-b3bf30161a32",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "application1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "application1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/applications/:applicationId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "{{created_application_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "672c23b1-b7b4-4603-947c-d5a8ab4cebfb",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete EXCLUDED group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8af91d2e-f553-402e-8bcc-c36c4e85110c",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:excludedGroupId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":excludedGroupId"
									],
									"variable": [
										{
											"key": "excludedGroupId",
											"value": "{{created_excluded_group_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "03d6f811-ccf1-4daf-aab9-f45aabb652ee",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c3e575ff-259c-4722-b509-e47ac5837abd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Importing",
			"item": [
				{
					"name": "From OpenAPI definition",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Get APIs and check if already imported for OpenAPI",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e19bd49-46dd-4654-92f2-2b15be8f07b2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var api = jsonData.find(api => api.name === \"Gravitee.io Portal Rest API\" && api.context_path === \"/portal/environments/DEFAULT\");",
													"",
													"if(api) {",
													"    pm.test(\"API has already been imported, following tests will be skipped\");",
													"    pm.collectionVariables.set(\"api_already_imported\", true);",
													"} else {",
													"    pm.collectionVariables.set(\"api_already_imported\", false);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check OpenAPI definition availability",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "549e0c38-3424-4e90-ba17-0f88303e104c",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL_OPENAPI}}",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL_OPENAPI}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Import API",
							"item": [
								{
									"name": "Import API from OAI",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f6e6efd-4636-44a5-b3eb-17377d3bcff1",
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 201\", function() {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"    pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"Should be stopped and private\", function() {",
													"        pm.expect(jsonData.visibility).to.eql(\"private\");",
													"        pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"with_documentation\": true,\n    \"with_path_mapping\": true,\n    \"with_policy_paths\": true,\n    \"with_policies\": [],\n    \"type\": \"URL\",\n    \"payload\": \"{{GRAVITEEIO_PORTAL_URL_OPENAPI}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import/swagger",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												"import",
												"swagger"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db6efc6-d8f5-4477-9667-119e56d45f76",
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"API must not be running\", function () {",
													"        pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    });",
													"",
													"    pm.test(\"API must be private\", function () {",
													"        pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "494442fa-1e55-46f7-9ad0-229c5c991391",
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 204\", function () {",
													"        pm.response.to.have.status(204);",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "From Swagger definition",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Get APIs and check if already imported for Swagger",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "32ce03cd-89ba-4e9d-9608-c792916509af",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var api = jsonData.find(api => api.name === \"Swagger Petstore\" && api.context_path === \"/v2\");",
													"",
													"if(api) {",
													"    pm.test(\"API has already been imported, following tests will be skipped\");",
													"    pm.collectionVariables.set(\"api_already_imported\", true);",
													"} else {",
													"    pm.collectionVariables.set(\"api_already_imported\", false);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Swagger definition availability",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a58f0a8-0f0f-4140-aed5-f2986bcb2b62",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://petstore.swagger.io/v2/swagger.json",
											"protocol": "https",
											"host": [
												"petstore",
												"swagger",
												"io"
											],
											"path": [
												"v2",
												"swagger.json"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Import API",
							"item": [
								{
									"name": "Import API from Swagger",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e302b9fb-96d5-4a09-8352-c431827cf6f2",
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 201\", function() {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"    pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"Should be stopped and private\", function() {",
													"        pm.expect(jsonData.visibility).to.eql(\"private\");",
													"        pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"with_documentation\": true,\n    \"with_path_mapping\": true,\n    \"with_policy_paths\": true,\n    \"with_policies\": [],\n    \"type\": \"URL\",\n    \"payload\": \"https://petstore.swagger.io/v2/swagger.json\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import/swagger",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												"import",
												"swagger"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "98aa7d6d-5ff9-40ad-85f0-c99bf084b14a",
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"API must not be running\", function () {",
													"        pm.expect(jsonData.state).to.eql(\"stopped\");",
													"    });",
													"",
													"    pm.test(\"API must be private\", function () {",
													"        pm.expect(jsonData.visibility).to.eql(\"private\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "74454813-2f79-466e-bfb7-7e2eb8d5457c",
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 204\", function () {",
													"        pm.response.to.have.status(204);",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "From Gravitee definition",
					"item": [
						{
							"name": "Import API",
							"item": [
								{
									"name": "Import API from Gravitee definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "54c87e93-c301-42af-a95b-1b7b5a861bc7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"});",
													"",
													"pm.test(\"API must be private\", function () {",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"});",
													"",
													"pm.test(\"API must be created\", function () {",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"created\");",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ae7b913c-30c3-4e64-a6ce-7e2dfe54734b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-importing\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												"import"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e053cdce-1952-411e-b126-b1b77fcb6c5b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Should have id\", function() {",
													"    pm.expect(jsonData.id).to.be.not.null;",
													"    pm.expect(jsonData.id).to.be.not.undefined;",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"stopped\");",
													"});",
													"",
													"pm.test(\"API must be private\", function () {",
													"    pm.expect(jsonData.visibility).to.eql(\"private\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "-- Clean up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43d1b494-0c66-45e6-b92e-2f4381ce277b",
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "742d5f7d-52e9-426c-ae1c-0c98f74966f2",
			"key": "RANDOM_NUMBER",
			"value": ""
		},
		{
			"id": "6fc093b3-bfe4-45f2-a0d1-9d0b960f2cae",
			"key": "API",
			"value": ""
		},
		{
			"id": "caa3a378-ff98-4d10-b319-2f5f26a8b691",
			"key": "API_ID",
			"value": ""
		},
		{
			"id": "80aa29f7-9dfc-4eb3-a451-dfcd3e653523",
			"key": "random_uid",
			"value": ""
		},
		{
			"id": "38f4dc92-ee01-44f0-9dec-5dd188442c50",
			"key": "created_api_id",
			"value": ""
		},
		{
			"id": "108b2b05-ad53-4362-bbc2-0e274f37c78c",
			"key": "user_member",
			"value": ""
		},
		{
			"id": "6bc12fde-62b0-42a9-922b-5e6f93dfe687",
			"key": "user_member_id",
			"value": ""
		},
		{
			"id": "f637de46-b278-463f-a551-417ac72c7cb6",
			"key": "user_member_reference",
			"value": ""
		},
		{
			"id": "00b3675f-0f21-4801-83aa-487ac7c1df35",
			"key": "created_rule",
			"value": ""
		},
		{
			"id": "e48dde15-4899-4ee7-a00e-3390551aea87",
			"key": "created_rule_id",
			"value": ""
		},
		{
			"id": "d4ac2c2b-8e98-404a-9af1-475b0f0541b0",
			"key": "created_reviewer_group",
			"value": ""
		},
		{
			"id": "c7370efc-9276-4f81-a4bc-6f4ee818c6c3",
			"key": "created_reviewer_group_id",
			"value": ""
		},
		{
			"id": "32fd7ae6-409e-4244-bc58-a1c46c9b0307",
			"key": "modified_api",
			"value": ""
		},
		{
			"id": "3f24f060-d570-415f-bb49-1b9df0bc5b87",
			"key": "created_reader_group",
			"value": ""
		},
		{
			"id": "808092f2-4761-46fa-a8f6-b89e813d1c77",
			"key": "created_reader_group_id",
			"value": ""
		},
		{
			"id": "70e03d39-2ecb-4df8-bd5a-d93164d4ef5d",
			"key": "created_page_outside_folder",
			"value": ""
		},
		{
			"id": "7102b359-d853-4b4e-a552-b5fcdbb420fd",
			"key": "created_page_outside_folder_id",
			"value": ""
		},
		{
			"id": "e5c2a560-3772-449e-aee5-5192a8cd7fda",
			"key": "created_homepage",
			"value": ""
		},
		{
			"id": "1c7bd5fa-3b14-4cb5-9b26-f28b51ebbdaf",
			"key": "created_homepage_id",
			"value": ""
		},
		{
			"id": "1d49dd55-7502-444a-be73-02fe0494dd10",
			"key": "created_page",
			"value": ""
		},
		{
			"id": "1d3b0a91-5f28-471e-b4cc-fe93528de841",
			"key": "created_page_id",
			"value": ""
		},
		{
			"id": "6bdc8b3e-a825-4831-8f41-badfddc96d8b",
			"key": "created_folder",
			"value": ""
		},
		{
			"id": "f8e7b8fa-8e11-4f7a-b6c8-0870d2863980",
			"key": "created_folder_id",
			"value": ""
		},
		{
			"id": "d5f3604b-5a8d-4c90-b343-d3066ef5d262",
			"key": "created_page_inside_folder",
			"value": ""
		},
		{
			"id": "56f48dfb-1b7d-4a03-9ee2-abf49b4eaf6d",
			"key": "created_page_inside_folder_id",
			"value": ""
		},
		{
			"id": "ceddc816-8531-43f2-957a-9af6c4a3cde6",
			"key": "created_metadata",
			"value": ""
		},
		{
			"id": "b2badcf9-c08d-4d5f-8958-355bb88f7702",
			"key": "created_metadata_id",
			"value": ""
		},
		{
			"id": "0aa7adbb-1f87-4136-aebf-b3f9c8587358",
			"key": "created_page_metadata",
			"value": ""
		},
		{
			"id": "143a7abc-3344-4fca-8e2c-39ddea1ba387",
			"key": "created_page_metadata_id",
			"value": ""
		},
		{
			"id": "f564b323-50c7-4770-a418-a0716c0ea53d",
			"key": "created_resource",
			"value": ""
		},
		{
			"id": "8e715144-841b-4308-84d1-907d6e6f3601",
			"key": "created_resource_id",
			"value": ""
		},
		{
			"id": "641b6777-7034-4009-8569-2b1d7c1e960a",
			"key": "aside_id",
			"value": ""
		},
		{
			"id": "d3233934-464a-453c-a947-669b52a8a4ec",
			"key": "created_link",
			"value": ""
		},
		{
			"id": "961d02e7-e077-40b6-ac1b-6838ffcae036",
			"key": "created_link_id",
			"value": ""
		},
		{
			"id": "fd2307f2-7995-4c63-b5fd-6708b9a9c029",
			"key": "api_rate",
			"value": ""
		},
		{
			"id": "cb376923-1655-4990-9391-e07fa8da4643",
			"key": "created_api",
			"value": ""
		},
		{
			"id": "64042492-881f-4651-99b0-4c66a767f303",
			"key": "api_already_imported",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}